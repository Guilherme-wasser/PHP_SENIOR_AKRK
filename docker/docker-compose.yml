services:
# ────────────────────────────── APP (PHP-FPM) ──────────────────────────────
  app:
    build:
      context: ..                         # ← raiz do projeto
      dockerfile: docker/php/Dockerfile   # ← Dockerfile dentro de docker/php
    volumes:
      - ../laravel:/var/www/html  
              # hot-reload do código Laravel
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "0"

    env_file: 
      - ../laravel/.env
    depends_on:
      - db
      - redis
    networks:
      - cnab-net

# ────────────────────────────── QUEUE WORKER ──────────────────────────────
  queue:
    build:
      context: ..
      dockerfile: docker/php/Dockerfile                           # reutiliza a mesma imagem recém-buildada
    command: ["start-container", "queue"]
    volumes:
      - ../laravel:/var/www/html
    env_file: 
      - ../laravel/.env
    depends_on:
      - db
      - redis
    networks:
      - cnab-net
    deploy:
      replicas: 1                         # escale com: docker compose up --scale queue=N

# ────────────────────────────── NGINX ──────────────────────────────
  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ../laravel:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - cnab-net

# ────────────────────────────── REDIS ──────────────────────────────
  redis:
    image: redis:7-alpine
    networks:
      - cnab-net

# ────────────────────────────── MYSQL ─────────────────────────────
  db:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: cnab
      MYSQL_USER: cnab
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - cnab-net

# ────────────────────────────── NETWORK & VOLUME ──────────────────────────
networks:
  cnab-net:

volumes:
  db-data:
